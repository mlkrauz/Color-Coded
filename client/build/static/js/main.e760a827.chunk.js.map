{"version":3,"sources":["components/ColorCard.js","pages/Home.js","utils/mutations.js","utils/auth.js","utils/userContext.js","pages/Login.js","pages/Signup.js","components/Navigation.js","utils/store.js","utils/reducers.js","utils/actions.js","components/ColorBankRow.js","components/ColorBank.js","components/ColorPicker/IroColorPicker.js","components/ColorPicker/Colorpicker.js","pages/Design.js","components/ExportButton.js","pages/Export.js","App.js","reportWebVitals.js","index.js"],"names":["ColorCard","title","children","Row","Col","xl","Card","className","Header","style","backgroundColor","color","Body","Home","border","width","Text","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","removeItem","window","location","assign","UserContext","createContext","useUserContext","useContext","Login","useState","email","password","formState","setFormState","useMutation","login","error","user","sendUserCallback","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","data","console","log","Auth","handleChange","target","name","value","to","onSubmit","Stack","gap","htmlFor","placeholder","type","id","onChange","Button","as","variant","Signup","props","addUser","Navigation","Navbar","bg","Container","loggedIn","Brand","href","Nav","Link","onClick","logout","store","createStore","state","action","currentUser","ColorBankRow","ButtonGroup","vertical","size","height","ColorBank","fluid","ListGroup","Item","IroColorPicker","newColor","onChangeCallback","ref","useRef","colorPickerRef","useEffect","iroSettings","layout","component","iro","ui","Wheel","Slider","options","sliderType","current","ColorPicker","on","hexString","Colorpicker","iroColor","setstate","direction","md","Ratio","aspectRatio","colorString","Design","themes","ExportButton","Export","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVA0BeA,EApBG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE1B,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,CAAMC,UAAU,YAAhB,UACE,cAACD,EAAA,EAAKE,OAAN,CAAaC,MAAO,CAAEC,gBAAiB,WAAYC,MAAO,SAA1D,SACIV,IAEJ,cAACK,EAAA,EAAKM,KAAN,CAAWH,MAAO,CAAEC,gBAAiB,aAAcH,UAAU,gCAA7D,SACIL,SAIR,cAACE,EAAA,EAAD,QCFSS,EAdF,WACX,OACE,cAAC,EAAD,CAAWZ,MAAM,0BAAjB,SACE,cAACK,EAAA,EAAD,CAAMC,UAAU,OAAOO,OAAO,OAAOL,MAAO,CAAEM,MAAO,SAArD,SACE,cAACT,EAAA,EAAKU,KAAN,CAAWT,UAAU,YAArB,uR,iECJKU,EAAQC,YAAH,wqBAsCLC,EAAWD,YAAH,gR,GAsBYA,YAAH,sRAoBQA,YAAH,gTAwBVA,YAAH,6yBA8CMA,YAAH,43BAqDAA,YAAH,+NAiBMA,YAAH,kQAmBWA,YAAH,4a,uBC5MlB,M,0FArCb,WACE,OAAOE,YAAOC,KAAKC,c,sBAGrB,WACE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,K,4BAGzC,SAAeA,GACb,IAEE,OADgBH,YAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,K,sBAIX,WACE,OAAOC,aAAaC,QAAQ,c,mBAG9B,SAAMC,GACJF,aAAaG,QAAQ,WAAYD,K,oBAKnC,WACEF,aAAaI,WAAW,YAExBC,OAAOC,SAASC,OAAO,S,sBClCrBC,EAAcC,0BAEPC,EAAiB,kBAAMC,qBAAWH,ICoFhCI,MA9Ef,WACE,MAAkCC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA2BC,YAAY9B,GAAvC,mBAAO+B,EAAP,KAAgBC,EAAhB,KAAgBA,MAChB,EAAmCV,IAA3BW,EAAR,EAAQA,KAAMC,EAAd,EAAcA,iBAERC,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACvBD,EAAME,iBADiB,kBAGUP,EAAM,CACnCQ,UAAW,CAAEb,MAAOE,EAAUF,MAC9BC,SAAUC,EAAUD,YALD,OAGfa,EAHe,OAOflC,EAAQkC,EAAiBC,KAAKV,MAAMzB,MAG1C4B,EAAiBM,EAAiBC,KAAKV,MAAME,MAC7CS,QAAQC,IAAIV,GAEZW,EAAKb,MAAMzB,GACXuB,EAAa,CAAEH,MAAO,GAAIC,SAAU,KAdf,kDAgBrBe,QAAQC,IAAR,MAhBqB,0DAAH,sDAoBhBE,EAAe,SAACT,GACpB,MAAwBA,EAAMU,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdnB,EAAa,2BACRD,GADO,kBAETmB,EAAOC,MAIZ,OACE,8BACE,eAAC,EAAD,CAAWhE,MAAM,QAAjB,UACA,cAAC,IAAD,CAAMiE,GAAG,UAAT,iCAEA,sBAAM3D,UAAU,OAAO4D,SAAUf,EAAjC,SACE,eAACgB,EAAA,EAAD,CAAOC,IAAK,EAAG9D,UAAU,qBAAzB,UACA,gCACE,uBAAOA,UAAU,OAAO+D,QAAQ,QAAhC,4BACA,uBAAO/D,UAAU,OACfgE,YAAY,qBACZP,KAAK,QACLQ,KAAK,QACLC,GAAG,QACHC,SAAUZ,OAGd,gCACE,uBAAOvD,UAAU,QAAQ+D,QAAQ,MAAjC,uBACA,uBAAO/D,UAAU,2BACfgE,YAAY,SACZP,KAAK,WACLQ,KAAK,WACLC,GAAG,MACHC,SAAUZ,OAGbb,EACC,8BACE,yEAIA,KACJ,8BACE,cAAC0B,EAAA,EAAD,CAAQpE,UAAU,OAAOqE,GAAG,QAAQJ,KAAK,SAASP,MAAM,SAASY,QAAQ,8BCmBpEC,MAxFf,SAAgBC,GACZ,MAAkCrC,mBAAS,CAAEsB,KAAM,GAAIrB,MAAO,GAAIC,SAAU,KAA5E,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAA6BC,YAAY5B,GAAzC,mBAAO6D,EAAP,KAAkB/B,EAAlB,KAAkBA,MAEZG,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACrBD,EAAME,iBADe,kBAIUyB,EAAQ,CACnCxB,UAAW,CACPb,MAAOE,EAAUF,MACjBC,SAAUC,EAAUD,SACpBoB,KAAMnB,EAAUmB,QARH,OAIfP,EAJe,OAaflC,EAAQkC,EAAiBC,KAAKsB,QAAQzD,MAC5CsC,EAAKb,MAAMzB,GACXuB,EAAa,CAAEkB,KAAM,GAAIrB,MAAO,GAAIC,SAAU,KAfzB,kDAiBrBe,QAAQC,IAAR,MAjBqB,0DAAH,sDAqBhBE,EAAe,SAACT,GAClB,MAAwBA,EAAMU,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdnB,EAAa,2BACND,GADK,kBAEPmB,EAAOC,MAIhB,OACI,8BACE,eAAC,EAAD,CAAWhE,MAAM,SAAjB,UACE,cAAC,IAAD,CAAMiE,GAAG,SAAT,gCAEA,sBAAM3D,UAAU,MAAM4D,SAAUf,EAAhC,SACI,eAACgB,EAAA,EAAD,CAAOC,IAAK,EAAG9D,UAAU,sBAAzB,UACA,sBAAKA,UAAU,OAAf,UACI,uBAAO+D,QAAQ,OAAf,mBACA,uBACIC,YAAY,OACZP,KAAK,OACLQ,KAAK,OACLC,GAAG,OACHC,SAAUZ,OAGlB,sBAAKvD,UAAU,OAAf,UACI,uBAAO+D,QAAQ,QAAf,oBACA,uBACEC,YAAY,qBACZP,KAAK,QACLQ,KAAK,QACLC,GAAG,QACHC,SAAUZ,OAGhB,sBAAKvD,UAAU,OAAf,UACE,uBAAO+D,QAAQ,MAAf,uBACA,uBACEC,YAAY,SACZP,KAAK,WACLQ,KAAK,WACLC,GAAG,MACHC,SAAUZ,OAGbb,EACP,8BACE,kFAIA,KACI,8BACE,cAAC0B,EAAA,EAAD,CAAQC,GAAG,QAAQJ,KAAK,SAASP,MAAM,SAASY,QAAQ,8B,wBC1C3DI,MAvCf,WA4BE,OAEE,cAACC,EAAA,EAAD,CAASC,GAAG,OAAON,QAAQ,OAA3B,SACE,cAACO,EAAA,EAAD,UA5BEvB,EAAKwB,WAEH,qCACE,cAACH,EAAA,EAAOI,MAAR,CAAc/E,UAAU,wBAAwBgF,KAAK,IAArD,yBACA,eAACC,EAAA,EAAD,CAAKjF,UAAU,uBAAf,UACE,cAACiF,EAAA,EAAIC,KAAL,CAAUF,KAAK,UAAf,oBACA,cAACC,EAAA,EAAIC,KAAL,CAAUF,KAAK,UAAf,oBACA,cAACC,EAAA,EAAIC,KAAL,CAAUF,KAAK,IAAIG,QAAS,kBAAM7B,EAAK8B,UAAvC,0BAMN,qCACI,cAACT,EAAA,EAAOI,MAAR,CAAc/E,UAAU,wBAAwBgF,KAAK,IAArD,yBACA,eAACC,EAAA,EAAD,CAAKjF,UAAU,uBAAf,UACE,cAACiF,EAAA,EAAIC,KAAL,CAAUF,KAAK,UAAf,oBACA,cAACC,EAAA,EAAIC,KAAL,CAAUF,KAAK,UAAf,oBACA,cAACC,EAAA,EAAIC,KAAL,CAAUF,KAAK,SAAf,8B,kBCnBCK,GAFDC,cCLS,SAACC,EAAOC,GAC7B,MCHiC,wBDGzBA,EAAOvB,KAEJ,2BACFsB,GADL,IAEEE,YAAY,aAAKD,EAAOC,eAGjBF,IDPM,CACnBE,YAAa,O,mBGKA,SAASC,KACtB,OACE,8BACE,eAACb,EAAA,EAAD,CAAW7E,UAAU,+BAArB,UACE,cAAC6E,EAAA,EAAD,UACE,eAACc,GAAA,EAAD,CAAaC,UAAQ,EAArB,UACE,cAACxB,EAAA,EAAD,CAAQE,QAAQ,eAAeuB,KAAK,KAApC,kBACA,cAACzB,EAAA,EAAD,CAAQE,QAAQ,eAAeuB,KAAK,KAApC,yBAGJ,eAAChB,EAAA,EAAD,CAAW7E,UAAU,mCAArB,UACA,cAACD,EAAA,EAAD,aAAMC,UAAU,WAChBO,OAAO,OACPL,MAAO,CAAEM,MAAO,SAFhB,QAGO,CAAEsF,OAAQ,UAGjB,cAAC/F,EAAA,EAAD,aAAMC,UAAU,WAChBO,OAAO,OACPL,MAAO,CAAEM,MAAO,SAFhB,QAGO,CAAEsF,OAAQ,UAGjB,cAAC/F,EAAA,EAAD,aAAMC,UAAU,WAChBO,OAAO,OACPL,MAAO,CAAEM,MAAO,SAFhB,QAGO,CAAEsF,OAAQ,UAEjB,cAAC/F,EAAA,EAAD,aAAMC,UAAU,WAChBO,OAAO,OACPL,MAAO,CAAEM,MAAO,SAFhB,QAGO,CAAEsF,OAAQ,UAGjB,cAAC/F,EAAA,EAAD,aAAMC,UAAU,WAChBO,OAAO,OACPL,MAAO,CAAEM,MAAO,SAFhB,QAGO,CAAEsF,OAAQ,kB,aCxCV,SAASC,KACtB,OACE,8BACE,cAAChG,EAAA,EAAD,CAAMiG,OAAK,EAACzF,OAAO,OAAnB,SACE,eAAC0F,GAAA,EAAD,WACA,cAACA,GAAA,EAAUC,KAAX,UAAgB,cAACR,GAAD,MAChB,cAACO,GAAA,EAAUC,KAAX,UAAgB,cAACR,GAAD,MAChB,cAACO,GAAA,EAAUC,KAAX,UAAgB,cAACR,GAAD,a,aCkDTS,GA5DQ,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBAE5BC,EAAMC,iBAAO,MACbC,EAAiBD,iBAAO,MAoD9B,OAhDAE,qBAAU,WAER,IAAMC,EAAc,CAElBlG,MAAO,IACPJ,MAAO,UACPuG,OAAQ,CACN,CACEC,UAAWC,KAAIC,GAAGC,OAEpB,CACEH,UAAWC,KAAIC,GAAGE,OAClBC,QAAS,CACPC,WAAY,QAGhB,CACEN,UAAWC,KAAIC,GAAGE,OAClBC,QAAS,CACPC,WAAY,eAGhB,CACEN,UAAWC,KAAIC,GAAGE,OAClBC,QAAS,CACPC,WAAY,YAOpBV,EAAeW,QACb,IAAIN,KAAIO,YAAYd,EAAIa,QAAxB,eACKT,IAKPF,EAAeW,QAAQE,GAAG,gBAAgB,SAACjB,GAAD,OAAcC,EAAiBD,EAASkB,gBACjF,IAGHb,qBAAU,WACRD,EAAeW,QAAQ/G,MAAMkH,UAAYlB,IACxC,CAACA,IAIF,qBAAKE,IAAKA,K,SCOCiB,OAxDf,SAAqB/C,GAEnB,MAA0BrC,mBAAS,CACjCqF,SAAU,UACVpB,SAAU,YAFZ,mBAAOb,EAAP,KAAckC,EAAd,KAKA,OACE,cAAC5C,EAAA,EAAD,UACE,eAAChB,EAAA,EAAD,CAAO6D,UAAU,aAAa5D,IAAK,EAAnC,UACE,qBAAK6D,GAAG,IAAI3H,UAAU,gDAAiDE,MAAO,CAAEM,MAAO,OAAQsF,OAAQ,SAAvG,SACE,eAACjC,EAAA,EAAD,CAAO6D,UAAU,WAAW1H,UAAU,0CAAtC,UACE,cAACoE,EAAA,EAAD,CAAQpE,UAAU,OAAOsE,QAAQ,YAAjC,0BACA,cAACsD,GAAA,EAAD,CAAO5H,UAAU,OAAO6H,YAAY,MAApC,SACE,qBAAK7H,UAAU,gCAAgCE,MAAO,CAAC,WAAc,eAGvE,cAAC0H,GAAA,EAAD,CAAO5H,UAAU,OAAO6H,YAAY,MAApC,SACE,qBAAK7H,UAAU,mDAAmDE,MAAO,CAAC,WAAc,WAAxF,4BAIF,cAAC0H,GAAA,EAAD,CAAO5H,UAAU,OAAO6H,YAAY,MAApC,SACE,qBAAK3H,MAAO,CAAC,WAAc,eAG7B,cAAC0H,GAAA,EAAD,CAAO5H,UAAU,OAAO6H,YAAY,MAApC,SACE,qBAAK3H,MAAO,CAAC,WAAc,eAG7B,cAAC0H,GAAA,EAAD,CAAO5H,UAAU,OAAO6H,YAAY,MAApC,SACE,qBAAK3H,MAAO,CAAC,WAAc,eAG7B,cAAC0H,GAAA,EAAD,CAAO5H,UAAU,OAAO6H,YAAY,MAApC,SACE,qBAAK3H,MAAO,CAAC,WAAc,eAG7B,cAAC0H,GAAA,EAAD,CAAO5H,UAAU,OAAO6H,YAAY,MAApC,SACE,qBAAK3H,MAAO,CAAC,WAAc,eAG7B,cAACkE,EAAA,EAAD,CAAQpE,UAAU,OAAOsE,QAAQ,YAAjC,+BAGJ,cAACO,EAAA,EAAD,CAAW8C,GAAG,IAAI3H,UAAU,gCAA5B,SACE,cAAC,GAAD,CACEoG,SAAUb,EAAMa,SAChBC,iBAAkB,SAACyB,GAAD,OAAiBL,EAAS,2BAAKlC,GAAN,IAAaiC,SAAUM,gBC1B/DC,GAxBA,WAEb,IAAQpF,EAASX,IAATW,KAGR,OAFAS,QAAQC,IAAIV,GAETW,EAAKwB,WAEJ,qCACE,cAAC,EAAD,CAAWpF,MAAM,gCAAjB,SACE,cAACqG,GAAD,CAAWiC,OAAQrF,EAAKqF,WAEzBrF,EAAKc,KACN,cAAC,EAAD,CAAW/D,MAAM,qBAAjB,SACE,cAAC,GAAD,SAMJiC,OAAOC,SAASoD,KAAO,UCrBd,SAASiD,KACpB,OACI,cAAC7D,EAAA,EAAD,CAAQE,QAAQ,eAAhB,oBCDR,IAwBe4D,GAxBA,WAEb,OAAG5E,EAAKwB,WAEJ,cAAC,EAAD,CAAWpF,MAAM,8BAAjB,SACE,cAACK,EAAA,EAAD,CAAMC,UAAU,YAAhB,SACE,eAACD,EAAA,EAAKM,KAAN,WACE,uBADF,kFAGE,uBACA,cAAC4H,GAAD,WAONtG,OAAOC,SAASoD,KAAO,UCDvBmD,I,cAAWC,YAAe,CAC9BC,IAAK,cAGDC,GAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1BzH,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACLkH,QAAQ,2BACHA,GADE,IAELC,cAAe1H,EAAK,iBAAaA,GAAU,SAK3C2H,GAAS,IAAIC,IAAa,CAC9BC,KAAMP,GAASQ,OAAOX,IACtBY,MAAO,IAAIC,MAuBEC,OApBf,WAEE,OACE,cAACC,EAAA,EAAD,CAAgBP,OAAQA,GAAxB,SACE,cAAC,KAAD,CAAUtD,MAAOA,GAAjB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACG,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,IAAIxC,UAAWtG,IACjC,cAAC,IAAD,CAAO6I,OAAK,EAACC,KAAK,UAAUxC,UAAWmB,KACvC,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,UAAUxC,UAAWsB,KACvC,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,SAASxC,UAAW1E,IACtC,cAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,UAAUxC,UAAWrC,eC1CrC8E,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.e760a827.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/esm/Row';\nimport Col from 'react-bootstrap/esm/Col';\n\nconst ColorCard = ({ title, children }) => {\n  \n  return (\n    <Row>\n      <Col></Col>\n      <Col xl={8}>\n        <Card className=\"mx-5 my-5\">\n          <Card.Header style={{ backgroundColor: 'darkGray', color: 'white'}}>\n            { title }\n          </Card.Header>\n          <Card.Body style={{ backgroundColor: 'lightGray'}} className='d-flex justify-content-center'>\n            { children }\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col></Col>\n    </Row>\n  );\n};\n\nexport default ColorCard;\n","import React from \"react\";\n\nimport Card from 'react-bootstrap/Card';\nimport ColorCard from '../components/ColorCard.js';\n\nconst Home = () => {\n  return (\n    <ColorCard title='Welcome to Color-Coded!'>\n      <Card className=\"my-5\" border=\"dark\" style={{ width: '36rem' }}>\n        <Card.Text className=\"py-5 px-5\">\n          Color-Coded is a color-selecting app that helps the aesthetically challenged.\n          Our app allows users to pick colors to create a theme, save theme in their profile, and export the themes that have been created.\n          Using this app you too can become a master of color!\n        </Card.Text>\n      </Card>\n    </ColorCard>\n  );\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\r\n\r\n/**\r\n * Auth mutations.\r\n */\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        name\r\n        email\r\n        themes {\r\n          _id\r\n          name\r\n          locked\r\n          backgrounds {\r\n            _id\r\n            color\r\n          }\r\n          accents {\r\n            _id\r\n            color\r\n          }\r\n          typefaces {\r\n            _id\r\n            color\r\n          }\r\n          hyperlink_unclicked {\r\n            _id\r\n            color\r\n          }\r\n          hyperlink_clicked {\r\n            _id\r\n            color\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $name: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      name: $name\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * User mutations.\r\n */\r\nexport const ADD_THEME_TO_USER = gql`\r\n  mutation addThemeToUser(\r\n    $userId: ID!\r\n    $themeId: ID!\r\n  ) {\r\n    addThemeToUser(\r\n      userId: $userId\r\n      themeId: $themeId\r\n    ) {\r\n      _id\r\n      name\r\n      email\r\n      themes {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_THEME_FROM_USER = gql`\r\n  mutation removeThemeFromUser(\r\n    $userId: ID!\r\n    $themeId: ID!\r\n  ) {\r\n    removeThemeFromUser(\r\n      userId: $userId\r\n      themeId: $themeId\r\n    ) {\r\n      _id\r\n      name\r\n      email\r\n      themes {\r\n        _id\r\n        name\r\n        locked\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Theme mutations.\r\n */\r\nexport const ADD_THEME = gql`\r\n  mutation addTheme(\r\n    $name: String\r\n    $primary: ID!\r\n    $backgrounds: [ID]\r\n    $accents: [ID]\r\n    $typefaces: [ID]\r\n    $hyperlink_unclicked: ID\r\n    $hyperlink_clicked: ID\r\n  ) {\r\n    addTheme(\r\n      name: $name\r\n      primary: $primary\r\n      backgrounds: $backgrounds\r\n      accents: $accents\r\n      typeface: $typeface\r\n      hyperlink_unclicked: $hyperlink_unclicked\r\n      hyperlink_clicked: $hyperlink_clicked\r\n    ) {\r\n      _id\r\n      name\r\n      locked\r\n      backgrounds {\r\n        _id\r\n        color\r\n      }\r\n      accents {\r\n        _id\r\n        color\r\n      }\r\n      typefaces {\r\n        _id\r\n        color\r\n      }\r\n      hyperlink_unclicked {\r\n        _id\r\n        color\r\n      }\r\n      hyperlink_clicked {\r\n        _id\r\n        color\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_THEME = gql`\r\n  mutation updateTheme(\r\n    $id: ID!\r\n    $name: String\r\n    $locked: Boolean\r\n    $primary: ID\r\n    $backgrounds: [ID]\r\n    $accents: [ID]\r\n    $typefaces: [ID]\r\n    $hyperlink_unclicked: ID\r\n    $hyperlink_clicked: ID\r\n  ) {\r\n    updateTheme(\r\n      id: $id\r\n      name: $name\r\n      locked: $locked\r\n      primary: $primary\r\n      backgrounds: $backgrounds\r\n      accents: $accents\r\n      typeface: $typeface\r\n      hyperlink_unclicked: $hyperlink_unclicked\r\n      hyperlink_clicked: $hyperlink_clicked\r\n    ) {\r\n      _id\r\n      name\r\n      locked\r\n      backgrounds {\r\n        _id\r\n        color\r\n      }\r\n      accents {\r\n        _id\r\n        color\r\n      }\r\n      typefaces {\r\n        _id\r\n        color\r\n      }\r\n      hyperlink_unclicked {\r\n        _id\r\n        color\r\n      }\r\n      hyperlink_clicked {\r\n        _id\r\n        color\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Color mutations.\r\n */\r\nexport const ADD_COLOR = gql`\r\n  mutation addColor(\r\n    $color: String!\r\n  ) {\r\n    addColor(\r\n      color: $color\r\n    ) {\r\n      _id\r\n      color\r\n      tint\r\n      shade\r\n      tintEnabled\r\n      shadeEnabled\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CHANGE_COLOR = gql`\r\n  mutation changeColor(\r\n    $id: ID!\r\n    $color: String!\r\n  ) {\r\n    changeColor(\r\n      id: $id\r\n      color: $color\r\n    ) {\r\n      _id\r\n      color\r\n      tint\r\n      shade\r\n      tintEnabled\r\n      shadeEnabled\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CHANGE_TINT_OR_SHADE = gql`\r\n  mutation changeTintOrShade(\r\n    $id: ID!\r\n    $tint: Float\r\n    $shade: Float\r\n    $tintEnabled: Boolean\r\n    $shadeEnabled: Boolean\r\n  ) {\r\n    changeTintOrShade(\r\n      id: $id\r\n      tint: $tint\r\n      shade: $shade\r\n      tintEnabled: $tintEnabled\r\n      shadeEnabled: $shadeEnabled\r\n    ) {\r\n      _id\r\n      color\r\n      tint\r\n      shade\r\n      tintEnabled\r\n      shadeEnabled\r\n    }\r\n  }\r\n`;\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    //window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { createContext, useContext, useState } from 'react';\n\nconst UserContext = createContext();\n\nexport const useUserContext = () => useContext(UserContext);\n\nexport const UserProvider = ({ children }) => {\n\n  // Create state variables\n  const [user, setUser] = useState({});\n\n  // Callback function that the login page can use to return the logged in user.\n  const sendUserCallback = (incomingUser) => { setUser(incomingUser) };\n\n  return (\n    <UserContext.Provider value={{ user, sendUserCallback }}>\n      { children }\n    </UserContext.Provider>\n  );\n}","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport Button from 'react-bootstrap/Button';\nimport Stack from 'react-bootstrap/Stack';\nimport ColorCard from '../components/ColorCard';\nimport { useUserContext } from '../utils/userContext'\n\nfunction Login() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n  const { user, sendUserCallback } = useUserContext();\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email,\n        password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      \n      // Very important! This sends the user data to the parent App.\n      sendUserCallback(mutationResponse.data.login.user);\n      console.log(user)\n\n      Auth.login(token);\n      setFormState({ email: '', password: '' });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <ColorCard title='Login'>\n      <Link to='/signup'>← Go to Signup</Link>\n\n      <form className=\"p-3 \" onSubmit={handleFormSubmit}>\n        <Stack gap={2} className=\"col-md-5 mx-5 ps-5\">\n        <div>\n          <label className=\"me-2\" htmlFor='email'>Email address:</label>\n          <input className=\"my-1\"\n            placeholder='youremail@test.com'\n            name='email'\n            type='email'\n            id='email'\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label className=\"me-2 \" htmlFor='pwd'>Password:</label>\n          <input className=\"my-1 justify-content-end\"\n            placeholder='******'\n            name='password'\n            type='password'\n            id='pwd'\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p>\n              The provided credentials are incorrect\n            </p>\n          </div>\n        ) : null}\n        <div>\n          <Button className=\"mt-2\" as='input' type='submit' value='Submit' variant='outline-dark'></Button>\n        </div>\n        </Stack>\n      </form>\n      </ColorCard>\n    </div>\n\n  );  \n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\nimport Button from 'react-bootstrap/Button'\nimport Stack from 'react-bootstrap/Stack';\nimport ColorCard from '../components/ColorCard';\n\nfunction Signup(props) {\n    const [formState, setFormState] = useState({ name: '', email: '', password: ''});\n    // const [errorMessage, setErrorMessage] = useState('');\n    const [addUser, { error }] = useMutation(ADD_USER);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n\n        const mutationResponse = await addUser({\n            variables: {\n                email: formState.email,\n                password: formState.password,\n                name: formState.name,\n            },\n        });\n\n\n        const token = mutationResponse.data.addUser.token;\n        Auth.login(token);\n        setFormState({ name: '', email: '', password: ''});\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    }\n\n    return (\n        <div>\n          <ColorCard title='Signup'>\n            <Link to=\"/login\">← Go to Login</Link>\n\n            <form className=\"p-3\" onSubmit={handleFormSubmit}>\n                <Stack gap={2} className=\"col-md-5 mx-4 ps-5 \">\n                <div className=\"pb-2\">\n                    <label htmlFor='name'>Name:</label>\n                    <input\n                        placeholder='Name'\n                        name='name'\n                        type='name'\n                        id='name'\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"pb-2\">\n                    <label htmlFor='email'>Email:</label>\n                    <input\n                      placeholder='youremail@test.com'\n                      name='email'\n                      type='email'\n                      id='email'\n                      onChange={handleChange}\n                    />\n                </div>\n                <div className=\"pb-2\">\n                  <label htmlFor='pwd'>Password:</label>\n                  <input\n                    placeholder=\"******\"\n                    name='password'\n                    type='password'\n                    id='pwd'\n                    onChange={handleChange}\n                  />\n                </div>\n                {error ? (\n          <div>\n            <p>\n              The password must be at least 8 characters long\n            </p>\n          </div>\n        ) : null}\n                <div>\n                  <Button as='input' type='submit' value='Submit' variant='outline-dark'></Button>\n                </div>\n                </Stack>\n            </form>\n            </ColorCard>\n        </div>\n    );\n}\n\nexport default Signup;","import React, { usestate } from 'react';\nimport Auth from '../utils/auth';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/esm/Container';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction Navigation() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n          <>\n            <Navbar.Brand className=\"justify-content-start\" href=\"/\">Color-Coded</Navbar.Brand>\n            <Nav className=\"justify-content-end \">\n              <Nav.Link href=\"/design\">Design</Nav.Link> \n              <Nav.Link href=\"/export\">Export</Nav.Link> \n              <Nav.Link href=\"/\" onClick={() => Auth.logout()}>Logout</Nav.Link>\n              </Nav>\n            </>\n      );\n    } else {\n      return (\n        <>\n            <Navbar.Brand className=\"justify-content-start\" href=\"/\">Color-Coded</Navbar.Brand>\n            <Nav className=\"justify-content-end \">\n              <Nav.Link href=\"/design\">Design</Nav.Link> \n              <Nav.Link href=\"/export\">Export</Nav.Link> \n              <Nav.Link href=\"/login\">Login</Nav.Link>\n              </Nav>\n        </>\n      );\n    }\n  }\n\n  return (\n      \n    <Navbar  bg=\"dark\" variant=\"dark\" >\n      <Container>\n        {showNavigation()}\n      </Container>\n    </Navbar>\n  \n\n  )\n}\nexport default Navigation;","import { createStore } from 'redux';\nimport { reducer } from './reducers';\n\nconst initialState = {\n  currentUser: null\n}\n\nconst store = createStore(reducer, initialState);\n\nexport default store;","import { UPDATE_CURRENT_USER } from './actions';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: [...action.currentUser]\n      };\n      default:\n        return state;\n  }\n};\n","export const UPDATE_CURRENT_USER = \"UPDATE_CURRENT_USER\";\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/esm/Container';\n\n\nexport default function ColorBankRow() {\n  return (\n    <div>\n      <Container className=\"d-flex p-4 px-1 bg-secondary\">\n        <Container>\n          <ButtonGroup vertical>\n            <Button variant=\"outline-dark\" size=\"sm\" >Edit</Button>\n            <Button variant=\"outline-dark\" size=\"lg\">Delete</Button>\n          </ButtonGroup>\n        </Container>\n        <Container className=\"d-flex justify-content-between  \">\n        <Card className=\"p-3 mx-1\"\n        border=\"dark\"\n        style={{ width: '1rem' }}\n        style={{ height: '5rem'}}/>\n        \n        \n        <Card className=\"p-3 mx-1\"\n        border=\"dark\"\n        style={{ width: '1rem' }}\n        style={{ height: '5rem'}}/>\n        \n        \n        <Card className=\"p-3 mx-1\"\n        border=\"dark\"\n        style={{ width: '1rem' }}\n        style={{ height: '5rem'}}/>\n       \n        <Card className=\"p-3 mx-1\"\n        border=\"dark\"\n        style={{ width: '1rem' }}\n        style={{ height: '5rem'}}/>\n\n       \n        <Card className=\"p-3 mx-1\"\n        border=\"dark\"\n        style={{ width: '1rem' }}\n        style={{ height: '5rem'}}/>\n        </Container>\n      </Container>\n    </div>\n  );\n}","import React from 'react';\nimport ColorBankRow from './ColorBankRow';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/esm/ListGroupItem';\n\nexport default function ColorBank() {\n  return (\n    <div>\n      <Card fluid border='dark'>\n        <ListGroup>\n        <ListGroup.Item><ColorBankRow /></ListGroup.Item> \n        <ListGroup.Item><ColorBankRow /></ListGroup.Item> \n        <ListGroup.Item><ColorBankRow /></ListGroup.Item> \n        </ListGroup>\n      </Card>\n    </div>\n  );\n}","import React, { useState, useEffect, useRef } from 'react';\nimport iro from '@jaames/iro';\n\nconst IroColorPicker = ({ newColor, onChangeCallback }) => {\n  // useRef binds data to an HTML element from what I understand.\n  const ref = useRef(null);\n  const colorPickerRef = useRef(null);\n\n  // Because we have passed 0 dependencies to useEffect, this will only render once!\n  // Exactly what we want.\n  useEffect(() => {\n    // We only want to create a single color picker.\n    const iroSettings = {\n      // Set the size of the color picker\n      width: 180,\n      color: '#FFFFFF', //{h: 360, s: 0, v: 100},\n      layout: [\n        { \n          component: iro.ui.Wheel,\n        },\n        { \n          component: iro.ui.Slider,\n          options: {\n            sliderType: 'hue'\n          },\n        },\n        { \n          component: iro.ui.Slider,\n          options: {\n            sliderType: 'saturation'\n          }\n        },\n        { \n          component: iro.ui.Slider,\n          options: {\n            sliderType: 'value'\n          }\n        },\n      ]\n    };\n\n    // Create iro color picker and assign to reference\n    colorPickerRef.current = \n      new iro.ColorPicker(ref.current, {\n        ...iroSettings\n      }\n    )\n\n    // Using iro's inbuilt .on function, we can send the updated color string to the parent's state.\n    colorPickerRef.current.on('color:change', (newColor) => onChangeCallback(newColor.hexString))\n  }, [])\n\n  // We can create a second useEffect to update the iro color picker when we want to render a new color.\n  useEffect(() => {\n    colorPickerRef.current.color.hexString = newColor;\n  }, [newColor])\n\n  // Return an empty <div> with our iro color picker bound to it.\n  return (\n    <div ref={ref}></div>\n  )\n}\n\nexport default IroColorPicker;\n","import React, { useState } from 'react';\n\nimport IroColorPicker from '../ColorPicker/IroColorPicker'\n\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/esm/Container';\nimport Stack from 'react-bootstrap/Stack'\nimport Ratio from 'react-bootstrap/Ratio'\nimport Button from 'react-bootstrap/Button'\n\nfunction Colorpicker(props) {\n  \n  const [state, setstate] = useState({\n    iroColor: '#ffffff',\n    newColor: '#ffffff'\n  });\n\n  return (\n    <Container>\n      <Stack direction=\"horizontal\" gap={3}>\n        <div md='5' className='d-flex justify-content-center overflow-scroll'  style={{ width: '8rem', height: '35rem' }}>\n          <Stack direction=\"vertical\" className='mx-3 my-3 d-flex justify-content-center'>\n            <Button className='my-2' variant=\"secondary\">🔼</Button>\n            <Ratio className='my-2' aspectRatio='1x1'>\n              <div className='d-flex justify-content-center' style={{'background': '#FF0000'}}>\n              </div>\n            </Ratio>\n            <Ratio className='my-2' aspectRatio='1x1'>\n              <div className='d-flex justify-content-center align-items-center' style={{'background': '#00FF00'}}>\n              ✔️\n              </div>\n            </Ratio>\n            <Ratio className='my-2' aspectRatio='1x1'>\n              <div style={{'background': '#0000FF'}}>\n              </div>\n            </Ratio>\n            <Ratio className='my-2' aspectRatio='1x1'>\n              <div style={{'background': '#000000'}}>\n              </div>\n            </Ratio>\n            <Ratio className='my-2' aspectRatio='1x1'>\n              <div style={{'background': '#000000'}}>\n              </div>\n            </Ratio>\n            <Ratio className='my-2' aspectRatio='1x1'>\n              <div style={{'background': '#000000'}}>\n              </div>\n            </Ratio>\n            <Ratio className='my-2' aspectRatio='1x1'>\n              <div style={{'background': '#000000'}}>\n              </div>\n            </Ratio>\n            <Button className='my-2' variant=\"secondary\">🔽</Button>\n          </Stack>\n        </div>\n        <Container md='9' className='d-flex justify-content-center'>\n          <IroColorPicker\n            newColor={state.newColor}\n            onChangeCallback={(colorString) => setstate({ ...state, iroColor: colorString })}\n          />\n        </Container>\n      </Stack>\n    </Container>\n  );\n}\n\nexport default Colorpicker;\n","import React from 'react';\nimport Auth from '../utils/auth';\n\nimport ColorBank from '../components/ColorBank';\nimport Colorpicker from '../components/ColorPicker/Colorpicker';\nimport ColorCard from '../components/ColorCard';\nimport { useUserContext } from '../utils/userContext'\n\nconst Design = () => {\n\n  const { user } = useUserContext();\n  console.log(user);\n\n  if(Auth.loggedIn()) {\n    return (\n      <>\n        <ColorCard title='Select which theme to design!'>\n          <ColorBank themes={user.themes}/>\n        </ColorCard>\n        {user.name}\n        <ColorCard title='Design your theme!'>\n          <Colorpicker />\n        </ColorCard>\n      </>\n    )\n    } else {\n    return (\n      window.location.href = \"/login\"\n      )\n    }\n  }\n\nexport default Design;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\n\n\n\nexport default function ExportButton() {\n    return (\n        <Button variant=\"outline-dark\">Export</Button>\n    );\n  }","import React, { useState } from 'react';\nimport Auth from '../utils/auth';\n\nimport Card from 'react-bootstrap/Card';\nimport ExportButton from '../components/ExportButton';\nimport ColorCard from '../components/ColorCard.js';\n\nconst Export = () => {\n\n  if(Auth.loggedIn()) {\n    return (\n      <ColorCard title='Pick which theme to export!'>\n        <Card className=\"my-4 mx-1\">\n          <Card.Body>\n            <hr />\n            This page is under construction. Please come back soon for future developments.\n            <hr />\n            <ExportButton/>\n          </Card.Body>\n        </Card>\n      </ColorCard>\n    )\n  } else {\n    return (\n      window.location.href = '/login'\n    )\n  }\n}\n\n\n\nexport default Export;","import { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Navigation from './components/Navigation';\nimport store from './utils/store';\nimport { Provider } from 'react-redux';\nimport { UserProvider } from './utils/userContext.js'\nimport Design from './pages/Design';\nimport Export from './pages/Export';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n\n  return (\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <Router>\n          <Navigation />\n          <Switch>\n             <Route exact path=\"/\" component={Home} />\n             <Route exact path=\"/design\" component={Design} />\n             <Route exact path=\"/export\" component={Export} />\n             <Route exact path=\"/login\" component={Login} />\n             <Route exact path=\"/signup\" component={Signup} />\n          </Switch> \n        </Router>\n      </Provider>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}